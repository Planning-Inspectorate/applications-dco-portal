generator client {
  provider = "prisma-client-js"
  output   = "./client" // set the output directory for the generated Prisma Client, to support v7
}

datasource db {
  provider = "sqlserver"
  url      = env("SQL_CONNECTION_STRING_ADMIN")
}

// NOTES
//
// use '//' comments for notes relevant to the schema
// use '///' comments for notes that should be included in the types definition
// see https://www.prisma.io/docs/concepts/components/prisma-schema#comments
//
// we use GUIDs for IDs (see https://learn.microsoft.com/en-us/sql/t-sql/data-types/uniqueidentifier-transact-sql?view=sql-server-ver16)
// this is because these IDs may be used in URLs and it makes them harder to guess
// while we don't rely on that for security, it adds an extra layer
// not everything needs this, but easier to make them all consistent and the increase in size (vs int) is negligible

model Case {
  id         String     @id @default(dbgenerated("newid()")) @db.UniqueIdentifier
  reference  String
  createdAt  DateTime   @default(now())
  modifiedAt DateTime   @updatedAt
  Documents  Document[]
}

model OneTimePassword {
  id            String   @id @default(dbgenerated("newid()")) @db.UniqueIdentifier
  email         String   @unique
  hashedOtpCode String
  createdAt     DateTime @default(now())
  expiresAt     DateTime
  attempts      Int      @default(0)

  @@index([email])
}

model Document {
  // internal identifier
  id               String              @id @default(dbgenerated("newid()")) @db.UniqueIdentifier
  fileName         String
  uploadedDate     DateTime            @default(now())
  isCertified      Boolean
  subCategoryId    String
  SubCategory      DocumentSubCategory @relation(fields: [subCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  apfpRegulationId String
  ApfpRegulation   ApfpRegulation      @relation(fields: [apfpRegulationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  caseId           String              @db.UniqueIdentifier
  Case             Case                @relation(fields: [caseId], references: [id])
}

model DocumentCategory {
  /// unique machine-readable name, not generated, e.g. "application-form-related-information"
  id            String                @id
  displayName   String?
  SubCategories DocumentSubCategory[]
}

model DocumentSubCategory {
  /// unique machine-readable name, not generated, e.g. "application-cover-letter"
  id          String           @id
  displayName String?
  Document    Document[]
  categoryId  String
  Category    DocumentCategory @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ApfpRegulation {
  /// unique identifier for the regulation, e.g. "5-1", "5-2-a"
  id          String     @id
  displayName String
  Document    Document[]
}
